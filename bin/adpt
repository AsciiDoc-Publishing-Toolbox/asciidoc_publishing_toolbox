#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'
require 'asciidoc_publishing_toolbox'
require 'asciidoc_publishing_toolbox/utilities'
require 'asciidoc_publishing_toolbox/version'


EXECUTABLE_NAME = 'adpt'

subtext = <<~HELP
  Commonly used command are:
     init  :    Initializes a new empty document
     build :    Builds a an existing document
  See '#{EXECUTABLE_NAME} COMMAND --help' for more information on a specific command.
HELP

ARGV << '-h' if ARGV.empty?

options = {
  directory: Dir.pwd,
  overwrite: false
}
global = OptionParser.new do |opts|
  opts.banner = "Usage: #{EXECUTABLE_NAME} [options] [subcommand [options]]"
  opts.on('-V', '--[no-]verbose', 'Run verbosely') do |v|
    options[:verbose] = v
  end
  opts.on('-v', '--version', 'Show version') do
    puts "#{EXECUTABLE_NAME} -- version #{AsciiDocPublishingToolbox::VERSION}"
    exit
  end
  opts.separator "\n"
  opts.separator subtext
end

subcommands = {
  init: OptionParser.new do |opts|
    opts.banner = 'Usage: init [options]'
    opts.on('-d DIR', '--directory DIR', 'Set the output directory (default: current directory)') do |d|
      options[:directory] = d
    end
    opts.on('-o', '--overwrite', 'If the output directory is not empty, overwrite its content') do |o|
      options[:overwrite] = o
    end
  end,
  build: OptionParser.new do |opts|
    opts.banner = 'Usage: build [options]'
    opts.on('-d DIR', '--directory DIR', 'Set the input directory (default: current directory)') do |d|
      options[:directory] = d
    end
    # TODO: Add options
  end
}

global.order!
command = ARGV.shift
if command.nil? || command.empty?
  puts 'You must specify a command'
  puts 'Use --help or -h to get a list of available commands'
  return
end

command = command.to_sym

begin
  subcommands[command].order!
rescue NoMethodError
  puts "The given command wasn't found"
  puts 'Use --help or -h to get a list of available commands'
  return
end

case command
when :init
  AsciiDocPublishingToolbox::Utilities.check_target_directory options[:directory], options[:overwrite], true
  title = AsciiDocPublishingToolbox::Utilities.gets_not_empty 'Insert the document title:', 'No title inserted'
  authors = AsciiDocPublishingToolbox::Utilities.get_authors_input
  first_chapter = AsciiDocPublishingToolbox::Utilities.gets_not_empty 'Insert the first chapter title:', 'No title inserted'

  AsciiDocPublishingToolbox.init dir: options[:directory], overwrite: options[:overwrite], title: title, authors: authors, first_chapter: first_chapter

when :build
  AsciiDocPublishingToolbox.build dir: Pathname.new(options[:directory])
else
  puts "The given command wasn't found"
  puts 'Use --help or -h to get a list of available commands'
end

